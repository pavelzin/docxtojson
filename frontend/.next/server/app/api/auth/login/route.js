"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/auth/login/route";
exports.ids = ["app/api/auth/login/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "sqlite3":
/*!**************************!*\
  !*** external "sqlite3" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("sqlite3");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Flogin%2Froute&page=%2Fapi%2Fauth%2Flogin%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Flogin%2Froute.js&appDir=%2FUsers%2Fpawel%2FCode%2Fdocxtojson%2Ffrontend%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fpawel%2FCode%2Fdocxtojson%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Flogin%2Froute&page=%2Fapi%2Fauth%2Flogin%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Flogin%2Froute.js&appDir=%2FUsers%2Fpawel%2FCode%2Fdocxtojson%2Ffrontend%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fpawel%2FCode%2Fdocxtojson%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_pawel_Code_docxtojson_frontend_app_api_auth_login_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/auth/login/route.js */ \"(rsc)/./app/api/auth/login/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/auth/login/route\",\n        pathname: \"/api/auth/login\",\n        filename: \"route\",\n        bundlePath: \"app/api/auth/login/route\"\n    },\n    resolvedPagePath: \"/Users/pawel/Code/docxtojson/frontend/app/api/auth/login/route.js\",\n    nextConfigOutput,\n    userland: _Users_pawel_Code_docxtojson_frontend_app_api_auth_login_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/auth/login/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhdXRoJTJGbG9naW4lMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmF1dGglMkZsb2dpbiUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmF1dGglMkZsb2dpbiUyRnJvdXRlLmpzJmFwcERpcj0lMkZVc2VycyUyRnBhd2VsJTJGQ29kZSUyRmRvY3h0b2pzb24lMkZmcm9udGVuZCUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZwYXdlbCUyRkNvZGUlMkZkb2N4dG9qc29uJTJGZnJvbnRlbmQmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ2lCO0FBQzlGO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZG9jeC1lZGl0b3ItZnJvbnRlbmQvPzA3ZWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL3Bhd2VsL0NvZGUvZG9jeHRvanNvbi9mcm9udGVuZC9hcHAvYXBpL2F1dGgvbG9naW4vcm91dGUuanNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2F1dGgvbG9naW4vcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9hdXRoL2xvZ2luXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9hdXRoL2xvZ2luL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL3Bhd2VsL0NvZGUvZG9jeHRvanNvbi9mcm9udGVuZC9hcHAvYXBpL2F1dGgvbG9naW4vcm91dGUuanNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2F1dGgvbG9naW4vcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Flogin%2Froute&page=%2Fapi%2Fauth%2Flogin%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Flogin%2Froute.js&appDir=%2FUsers%2Fpawel%2FCode%2Fdocxtojson%2Ffrontend%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fpawel%2FCode%2Fdocxtojson%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/auth/login/route.js":
/*!*************************************!*\
  !*** ./app/api/auth/login/route.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_auth_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../lib/auth.js */ \"(rsc)/./lib/auth.js\");\n\n\nasync function POST(request) {\n    try {\n        const { username, password } = await request.json();\n        if (!username || !password) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Nazwa użytkownika i hasło są wymagane\"\n            }, {\n                status: 400\n            });\n        }\n        const result = await (0,_lib_auth_js__WEBPACK_IMPORTED_MODULE_1__.loginUser)(username, password);\n        if (!result.success) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: result.error\n            }, {\n                status: 401\n            });\n        }\n        // Ustawienie cookie z tokenem\n        const response = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            user: result.user\n        });\n        response.cookies.set(\"auth_token\", result.token, {\n            httpOnly: true,\n            secure: \"development\" === \"production\",\n            sameSite: \"lax\",\n            maxAge: 7 * 24 * 60 * 60 // 7 dni\n        });\n        return response;\n    } catch (error) {\n        console.error(\"Błąd API logowania:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Błąd serwera\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2F1dGgvbG9naW4vcm91dGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJDO0FBQ1M7QUFFN0MsZUFBZUUsS0FBS0MsT0FBTztJQUNoQyxJQUFJO1FBQ0YsTUFBTSxFQUFFQyxRQUFRLEVBQUVDLFFBQVEsRUFBRSxHQUFHLE1BQU1GLFFBQVFHLElBQUk7UUFFakQsSUFBSSxDQUFDRixZQUFZLENBQUNDLFVBQVU7WUFDMUIsT0FBT0wscURBQVlBLENBQUNNLElBQUksQ0FDdEI7Z0JBQUVDLE9BQU87WUFBd0MsR0FDakQ7Z0JBQUVDLFFBQVE7WUFBSTtRQUVsQjtRQUVBLE1BQU1DLFNBQVMsTUFBTVIsdURBQVNBLENBQUNHLFVBQVVDO1FBRXpDLElBQUksQ0FBQ0ksT0FBT0MsT0FBTyxFQUFFO1lBQ25CLE9BQU9WLHFEQUFZQSxDQUFDTSxJQUFJLENBQ3RCO2dCQUFFQyxPQUFPRSxPQUFPRixLQUFLO1lBQUMsR0FDdEI7Z0JBQUVDLFFBQVE7WUFBSTtRQUVsQjtRQUVBLDhCQUE4QjtRQUM5QixNQUFNRyxXQUFXWCxxREFBWUEsQ0FBQ00sSUFBSSxDQUFDO1lBQ2pDSSxTQUFTO1lBQ1RFLE1BQU1ILE9BQU9HLElBQUk7UUFDbkI7UUFFQUQsU0FBU0UsT0FBTyxDQUFDQyxHQUFHLENBQUMsY0FBY0wsT0FBT00sS0FBSyxFQUFFO1lBQy9DQyxVQUFVO1lBQ1ZDLFFBQVFDLGtCQUF5QjtZQUNqQ0MsVUFBVTtZQUNWQyxRQUFRLElBQUksS0FBSyxLQUFLLEdBQUcsUUFBUTtRQUNuQztRQUVBLE9BQU9UO0lBRVQsRUFBRSxPQUFPSixPQUFPO1FBQ2RjLFFBQVFkLEtBQUssQ0FBQyx1QkFBdUJBO1FBQ3JDLE9BQU9QLHFEQUFZQSxDQUFDTSxJQUFJLENBQ3RCO1lBQUVDLE9BQU87UUFBZSxHQUN4QjtZQUFFQyxRQUFRO1FBQUk7SUFFbEI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2RvY3gtZWRpdG9yLWZyb250ZW5kLy4vYXBwL2FwaS9hdXRoL2xvZ2luL3JvdXRlLmpzPzhmMGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHsgbG9naW5Vc2VyIH0gZnJvbSAnLi4vLi4vLi4vLi4vbGliL2F1dGguanMnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyB1c2VybmFtZSwgcGFzc3dvcmQgfSA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xuXG4gICAgaWYgKCF1c2VybmFtZSB8fCAhcGFzc3dvcmQpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvcjogJ05hendhIHXFvHl0a293bmlrYSBpIGhhc8WCbyBzxIUgd3ltYWdhbmUnIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBsb2dpblVzZXIodXNlcm5hbWUsIHBhc3N3b3JkKTtcblxuICAgIGlmICghcmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvcjogcmVzdWx0LmVycm9yIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDEgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICAvLyBVc3Rhd2llbmllIGNvb2tpZSB6IHRva2VuZW1cbiAgICBjb25zdCByZXNwb25zZSA9IE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICB1c2VyOiByZXN1bHQudXNlclxuICAgIH0pO1xuXG4gICAgcmVzcG9uc2UuY29va2llcy5zZXQoJ2F1dGhfdG9rZW4nLCByZXN1bHQudG9rZW4sIHtcbiAgICAgIGh0dHBPbmx5OiB0cnVlLFxuICAgICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nLFxuICAgICAgc2FtZVNpdGU6ICdsYXgnLFxuICAgICAgbWF4QWdlOiA3ICogMjQgKiA2MCAqIDYwIC8vIDcgZG5pXG4gICAgfSk7XG5cbiAgICByZXR1cm4gcmVzcG9uc2U7XG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdCxYLEhWQgQVBJIGxvZ293YW5pYTonLCBlcnJvcik7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgeyBlcnJvcjogJ0LFgsSFZCBzZXJ3ZXJhJyB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgKTtcbiAgfVxufSAiXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwibG9naW5Vc2VyIiwiUE9TVCIsInJlcXVlc3QiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwianNvbiIsImVycm9yIiwic3RhdHVzIiwicmVzdWx0Iiwic3VjY2VzcyIsInJlc3BvbnNlIiwidXNlciIsImNvb2tpZXMiLCJzZXQiLCJ0b2tlbiIsImh0dHBPbmx5Iiwic2VjdXJlIiwicHJvY2VzcyIsInNhbWVTaXRlIiwibWF4QWdlIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/auth/login/route.js\n");

/***/ }),

/***/ "(rsc)/./lib/auth.js":
/*!*********************!*\
  !*** ./lib/auth.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hashPassword: () => (/* binding */ hashPassword),\n/* harmony export */   initAuthDB: () => (/* binding */ initAuthDB),\n/* harmony export */   loginUser: () => (/* binding */ loginUser),\n/* harmony export */   logoutUser: () => (/* binding */ logoutUser),\n/* harmony export */   requireAuth: () => (/* binding */ requireAuth),\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken)\n/* harmony export */ });\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jsonwebtoken */ \"(rsc)/./node_modules/jsonwebtoken/index.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _database_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./database.js */ \"(rsc)/./lib/database.js\");\n/* harmony import */ var _database_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_database_js__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nconst { openDb } = (_database_js__WEBPACK_IMPORTED_MODULE_2___default());\nconst JWT_SECRET = process.env.JWT_SECRET || \"your-super-secret-jwt-key-change-this-in-production\";\n// Domyślny użytkownik admin (hasło: admin123)\nconst DEFAULT_USER = {\n    username: \"admin\",\n    password: \"$2a$10$8K1p/a0drteBtjM38FlEOeOlc2D9t1QC9RmF2qQvzlY7YHQ8KgaO2\" // bcrypt hash dla 'admin123'\n};\n// Inicjalizacja tabeli użytkowników\nasync function initAuthDB() {\n    const db = await openDb();\n    // Tworzenie tabeli użytkowników\n    await db.exec(`\n    CREATE TABLE IF NOT EXISTS users (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      username TEXT UNIQUE NOT NULL,\n      password TEXT NOT NULL,\n      created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n    )\n  `);\n    // Tworzenie tabeli sesji\n    await db.exec(`\n    CREATE TABLE IF NOT EXISTS sessions (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      user_id INTEGER,\n      token TEXT UNIQUE NOT NULL,\n      expires_at DATETIME NOT NULL,\n      created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n      FOREIGN KEY (user_id) REFERENCES users (id)\n    )\n  `);\n    // Dodanie domyślnego użytkownika admin jeśli nie istnieje\n    const existingUser = await db.get(\"SELECT id FROM users WHERE username = ?\", [\n        DEFAULT_USER.username\n    ]);\n    if (!existingUser) {\n        await db.run(\"INSERT INTO users (username, password) VALUES (?, ?)\", [\n            DEFAULT_USER.username,\n            DEFAULT_USER.password\n        ]);\n        console.log(\"✅ Utworzono domyślnego użytkownika: admin/admin123\");\n    }\n    await db.close();\n}\n// Logowanie użytkownika\nasync function loginUser(username, password) {\n    const db = await openDb();\n    try {\n        const user = await db.get(\"SELECT * FROM users WHERE username = ?\", [\n            username\n        ]);\n        if (!user) {\n            return {\n                success: false,\n                error: \"Nieprawidłowa nazwa użytkownika lub hasło\"\n            };\n        }\n        const isValidPassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_0___default().compare(password, user.password);\n        if (!isValidPassword) {\n            return {\n                success: false,\n                error: \"Nieprawidłowa nazwa użytkownika lub hasło\"\n            };\n        }\n        // Tworzenie tokena JWT\n        const token = jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().sign({\n            userId: user.id,\n            username: user.username\n        }, JWT_SECRET, {\n            expiresIn: \"7d\"\n        });\n        // Zapisanie sesji w bazie\n        const expiresAt = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000); // 7 dni\n        await db.run(\"INSERT INTO sessions (user_id, token, expires_at) VALUES (?, ?, ?)\", [\n            user.id,\n            token,\n            expiresAt.toISOString()\n        ]);\n        // Usuwanie starych sesji (starszych niż 30 dni)\n        await db.run('DELETE FROM sessions WHERE expires_at < datetime(\"now\")');\n        return {\n            success: true,\n            token,\n            user: {\n                id: user.id,\n                username: user.username\n            }\n        };\n    } catch (error) {\n        console.error(\"Błąd logowania:\", error);\n        return {\n            success: false,\n            error: \"Błąd serwera\"\n        };\n    } finally{\n        await db.close();\n    }\n}\n// Weryfikacja tokena\nasync function verifyToken(token) {\n    if (!token) {\n        return {\n            valid: false,\n            error: \"Brak tokena\"\n        };\n    }\n    try {\n        const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().verify(token, JWT_SECRET);\n        const db = await openDb();\n        // Sprawdzenie czy sesja istnieje w bazie\n        const session = await db.get('SELECT s.*, u.username FROM sessions s JOIN users u ON s.user_id = u.id WHERE s.token = ? AND s.expires_at > datetime(\"now\")', [\n            token\n        ]);\n        await db.close();\n        if (!session) {\n            return {\n                valid: false,\n                error: \"Nieprawidłowa sesja\"\n            };\n        }\n        return {\n            valid: true,\n            user: {\n                id: session.user_id,\n                username: session.username\n            }\n        };\n    } catch (error) {\n        return {\n            valid: false,\n            error: \"Nieprawidłowy token\"\n        };\n    }\n}\n// Wylogowanie (usunięcie sesji)\nasync function logoutUser(token) {\n    if (!token) return {\n        success: false\n    };\n    const db = await openDb();\n    try {\n        await db.run(\"DELETE FROM sessions WHERE token = ?\", [\n            token\n        ]);\n        return {\n            success: true\n        };\n    } catch (error) {\n        console.error(\"Błąd wylogowania:\", error);\n        return {\n            success: false\n        };\n    } finally{\n        await db.close();\n    }\n}\n// Middleware do sprawdzania autoryzacji\nfunction requireAuth(handler) {\n    return async (req, res)=>{\n        const token = req.cookies?.auth_token || req.headers.authorization?.replace(\"Bearer \", \"\");\n        const verification = await verifyToken(token);\n        if (!verification.valid) {\n            return res.status(401).json({\n                error: \"Unauthorized\"\n            });\n        }\n        req.user = verification.user;\n        return handler(req, res);\n    };\n}\n// Hash hasła (do tworzenia nowych użytkowników)\nasync function hashPassword(password) {\n    return await bcryptjs__WEBPACK_IMPORTED_MODULE_0___default().hash(password, 10);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth.js\n");

/***/ }),

/***/ "(rsc)/./lib/database.js":
/*!*************************!*\
  !*** ./lib/database.js ***!
  \*************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst sqlite3 = (__webpack_require__(/*! sqlite3 */ \"sqlite3\").verbose)();\nconst path = __webpack_require__(/*! path */ \"path\");\nconst { promisify } = __webpack_require__(/*! util */ \"util\");\n// Inicjalizacja bazy danych\nconst dbPath = path.join(process.cwd(), \"articles.db\");\nconst db = new sqlite3.Database(dbPath);\n// Promisify metod SQLite3 - POPRAWKA dla lastID\nconst dbRun = (sql, params = [])=>{\n    return new Promise((resolve, reject)=>{\n        db.run(sql, params, function(err) {\n            if (err) {\n                reject(err);\n            } else {\n                resolve({\n                    lastID: this.lastID,\n                    changes: this.changes\n                });\n            }\n        });\n    });\n};\nconst dbGet = promisify(db.get.bind(db));\nconst dbAll = promisify(db.all.bind(db));\n// Schemat bazy danych\nconst initializeDatabase = async ()=>{\n    try {\n        // Tabela artykułów\n        await dbRun(`\n      CREATE TABLE IF NOT EXISTS articles (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        article_id TEXT UNIQUE NOT NULL,\n        title TEXT NOT NULL,\n        title_hotnews TEXT,\n        title_social TEXT,\n        title_seo TEXT,\n        lead TEXT,\n        description TEXT,\n        author TEXT,\n        sources TEXT, -- JSON array\n        categories TEXT, -- JSON array \n        tags TEXT, -- JSON array\n        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n        updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n        imported_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n        status TEXT DEFAULT 'draft' -- draft, published, archived\n      )\n    `);\n        // Migracja: dodaj nowe kolumny jeśli nie istnieją\n        try {\n            await dbRun(`ALTER TABLE articles ADD COLUMN imported_from TEXT`);\n            console.log(\"Dodano kolumnę imported_from\");\n        } catch (e) {\n        // Kolumna już istnieje\n        }\n        try {\n            await dbRun(`ALTER TABLE articles ADD COLUMN drive_path TEXT`);\n            console.log(\"Dodano kolumnę drive_path\");\n        } catch (e) {\n        // Kolumna już istnieje\n        }\n        try {\n            await dbRun(`ALTER TABLE articles ADD COLUMN original_filename TEXT`);\n            console.log(\"Dodano kolumnę original_filename\");\n        } catch (e) {\n        // Kolumna już istnieje\n        }\n        // Tabela dla śledzenia synchronizacji Google Drive\n        await dbRun(`\n      CREATE TABLE IF NOT EXISTS sync_log (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        sync_type TEXT NOT NULL, -- 'full', 'incremental', 'month'\n        target_month TEXT, -- NULL dla full, nazwa miesiąca dla month\n        started_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n        completed_at DATETIME,\n        status TEXT DEFAULT 'running', -- 'running', 'completed', 'failed'\n        processed_count INTEGER DEFAULT 0,\n        imported_count INTEGER DEFAULT 0,\n        skipped_count INTEGER DEFAULT 0,\n        error_message TEXT,\n        last_file_modified DATETIME -- najnowszy plik z tej synchronizacji\n      )\n    `);\n        // Tabela dla metadanych plików Drive (cache)\n        await dbRun(`\n      CREATE TABLE IF NOT EXISTS drive_files_cache (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        file_id TEXT UNIQUE NOT NULL,\n        file_name TEXT NOT NULL,\n        file_path TEXT NOT NULL, -- np. \"LIPIEC 2025/Artykuł o psach\"\n        modified_time DATETIME NOT NULL,\n        size INTEGER,\n        last_checked DATETIME DEFAULT CURRENT_TIMESTAMP,\n        is_processed BOOLEAN DEFAULT FALSE\n      )\n    `);\n        // Tabela dla śledzenia pól wygenerowanych przez AI\n        await dbRun(`\n      CREATE TABLE IF NOT EXISTS ai_generated_fields (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        article_id TEXT NOT NULL,\n        field_name TEXT NOT NULL,\n        is_ai_generated BOOLEAN DEFAULT TRUE,\n        generation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n        ai_confidence REAL DEFAULT 1.0,\n        FOREIGN KEY (article_id) REFERENCES articles(article_id) ON DELETE CASCADE,\n        UNIQUE(article_id, field_name)\n      )\n    `);\n        // Tabela dla historii edycji\n        await dbRun(`\n      CREATE TABLE IF NOT EXISTS edit_history (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        article_id TEXT NOT NULL,\n        field_name TEXT NOT NULL,\n        old_value TEXT,\n        new_value TEXT,\n        edited_by TEXT DEFAULT 'user',\n        edited_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n        FOREIGN KEY (article_id) REFERENCES articles(article_id) ON DELETE CASCADE\n      )\n    `);\n        // Indeksy\n        await dbRun(`CREATE INDEX IF NOT EXISTS idx_articles_article_id ON articles(article_id)`);\n        await dbRun(`CREATE INDEX IF NOT EXISTS idx_articles_status ON articles(status)`);\n        await dbRun(`CREATE INDEX IF NOT EXISTS idx_articles_created_at ON articles(created_at)`);\n        await dbRun(`CREATE INDEX IF NOT EXISTS idx_articles_drive_path ON articles(drive_path)`);\n        await dbRun(`CREATE INDEX IF NOT EXISTS idx_sync_log_started_at ON sync_log(started_at)`);\n        await dbRun(`CREATE INDEX IF NOT EXISTS idx_drive_files_modified_time ON drive_files_cache(modified_time)`);\n        await dbRun(`CREATE INDEX IF NOT EXISTS idx_drive_files_path ON drive_files_cache(file_path)`);\n        await dbRun(`CREATE INDEX IF NOT EXISTS idx_ai_fields_article_id ON ai_generated_fields(article_id)`);\n        await dbRun(`CREATE INDEX IF NOT EXISTS idx_edit_history_article_id ON edit_history(article_id)`);\n        console.log(\"✅ Baza danych została zainicjalizowana\");\n    } catch (error) {\n        console.error(\"❌ Błąd inicjalizacji bazy danych:\", error);\n        throw error;\n    }\n};\n// Funkcje do zarządzania artykułami\nconst articleQueries = {\n    // Pobierz wszystkie artykuły z informacją o polach AI\n    getAllArticles: async ()=>{\n        return await dbAll(`\n      SELECT \n        a.*,\n        GROUP_CONCAT(\n          CASE WHEN aif.is_ai_generated = 1 \n          THEN aif.field_name \n          ELSE NULL END\n        ) as ai_fields\n      FROM articles a\n      LEFT JOIN ai_generated_fields aif ON a.article_id = aif.article_id\n      GROUP BY a.id\n      ORDER BY a.created_at DESC\n    `);\n    },\n    // Pobierz pojedynczy artykuł\n    getArticleById: async (articleId)=>{\n        return await dbGet(`SELECT * FROM articles WHERE article_id = ?`, [\n            articleId\n        ]);\n    },\n    // Sprawdź czy artykuł z danej ścieżki już istnieje\n    getArticleByPath: async (drivePath, filename)=>{\n        return await dbGet(`\n      SELECT * FROM articles \n      WHERE drive_path = ? AND original_filename = ?\n    `, [\n            drivePath,\n            filename\n        ]);\n    },\n    // Sprawdź czy artykuł z tym tytułem już istnieje\n    getArticleByTitle: async (title)=>{\n        return await dbGet(`\n      SELECT * FROM articles \n      WHERE title = ?\n    `, [\n            title\n        ]);\n    },\n    // Pobierz pola AI dla artykułu\n    getAIFieldsForArticle: async (articleId)=>{\n        return await dbAll(`\n      SELECT field_name, is_ai_generated, generation_date, ai_confidence \n      FROM ai_generated_fields \n      WHERE article_id = ?\n    `, [\n            articleId\n        ]);\n    },\n    // Wstaw nowy artykuł\n    insertArticle: async (articleId, title, titleHotnews, titleSocial, titleSeo, lead, description, author, sources, categories, tags, status, importedFrom = null, drivePath = null, originalFilename = null)=>{\n        return await dbRun(`\n      INSERT INTO articles (\n        article_id, title, title_hotnews, title_social, title_seo,\n        lead, description, author, sources, categories, tags, status,\n        imported_from, drive_path, original_filename\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `, [\n            articleId,\n            title,\n            titleHotnews,\n            titleSocial,\n            titleSeo,\n            lead,\n            description,\n            author,\n            sources,\n            categories,\n            tags,\n            status,\n            importedFrom,\n            drivePath,\n            originalFilename\n        ]);\n    },\n    // Aktualizuj artykuł\n    updateArticle: async (title, titleHotnews, titleSocial, titleSeo, lead, description, author, sources, categories, tags, status, articleId)=>{\n        return await dbRun(`\n      UPDATE articles SET\n        title = ?, title_hotnews = ?, title_social = ?, title_seo = ?,\n        lead = ?, description = ?, author = ?, sources = ?, \n        categories = ?, tags = ?, status = ?, updated_at = CURRENT_TIMESTAMP\n      WHERE article_id = ?\n    `, [\n            title,\n            titleHotnews,\n            titleSocial,\n            titleSeo,\n            lead,\n            description,\n            author,\n            sources,\n            categories,\n            tags,\n            status,\n            articleId\n        ]);\n    },\n    // Usuń artykuł\n    deleteArticle: async (articleId)=>{\n        return await dbRun(`DELETE FROM articles WHERE article_id = ?`, [\n            articleId\n        ]);\n    },\n    // Wstaw informację o polu AI\n    insertAIField: async (articleId, fieldName, isAI, confidence)=>{\n        return await dbRun(`\n      INSERT OR REPLACE INTO ai_generated_fields (\n        article_id, field_name, is_ai_generated, ai_confidence\n      ) VALUES (?, ?, ?, ?)\n    `, [\n            articleId,\n            fieldName,\n            isAI,\n            confidence\n        ]);\n    },\n    // Aktualizuj status pola AI (gdy użytkownik edytuje)\n    updateAIFieldStatus: async (articleId, fieldName)=>{\n        return await dbRun(`\n      UPDATE ai_generated_fields \n      SET is_ai_generated = FALSE \n      WHERE article_id = ? AND field_name = ?\n    `, [\n            articleId,\n            fieldName\n        ]);\n    },\n    // Dodaj wpis do historii edycji\n    insertEditHistory: async (articleId, fieldName, oldValue, newValue, editedBy)=>{\n        return await dbRun(`\n      INSERT INTO edit_history (\n        article_id, field_name, old_value, new_value, edited_by\n      ) VALUES (?, ?, ?, ?, ?)\n    `, [\n            articleId,\n            fieldName,\n            oldValue,\n            newValue,\n            editedBy\n        ]);\n    },\n    // === SYNCHRONIZACJA GOOGLE DRIVE ===\n    // Rozpocznij nową synchronizację\n    startSync: async (syncType, targetMonth = null)=>{\n        const result = await dbRun(`\n      INSERT INTO sync_log (sync_type, target_month, status)\n      VALUES (?, ?, 'running')\n    `, [\n            syncType,\n            targetMonth\n        ]);\n        return result.lastID;\n    },\n    // Zakończ synchronizację\n    completeSync: async (syncId, processed, imported, skipped, errorMessage = null)=>{\n        const status = errorMessage ? \"failed\" : \"completed\";\n        return await dbRun(`\n      UPDATE sync_log SET\n        completed_at = CURRENT_TIMESTAMP,\n        status = ?,\n        processed_count = ?,\n        imported_count = ?,\n        skipped_count = ?,\n        error_message = ?\n      WHERE id = ?\n    `, [\n            status,\n            processed,\n            imported,\n            skipped,\n            errorMessage,\n            syncId\n        ]);\n    },\n    // Pobierz ostatnią udaną synchronizację\n    getLastSuccessfulSync: async (syncType = null)=>{\n        let query = `\n      SELECT * FROM sync_log \n      WHERE status = 'completed'\n    `;\n        const params = [];\n        if (syncType) {\n            query += ` AND sync_type = ?`;\n            params.push(syncType);\n        }\n        query += ` ORDER BY completed_at DESC LIMIT 1`;\n        return await dbGet(query, params);\n    },\n    // Zapisz/aktualizuj metadane pliku Drive\n    upsertDriveFileCache: async (fileId, fileName, filePath, modifiedTime, size)=>{\n        return await dbRun(`\n      INSERT OR REPLACE INTO drive_files_cache \n      (file_id, file_name, file_path, modified_time, size, last_checked)\n      VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP)\n    `, [\n            fileId,\n            fileName,\n            filePath,\n            modifiedTime,\n            size\n        ]);\n    },\n    // Sprawdź czy plik był już przetworzony\n    getDriveFileCache: async (fileId)=>{\n        return await dbGet(`\n      SELECT * FROM drive_files_cache WHERE file_id = ?\n    `, [\n            fileId\n        ]);\n    },\n    // Pobierz pliki nowsze niż ostatnia synchronizacja\n    getNewDriveFiles: async (sinceDate)=>{\n        return await dbAll(`\n      SELECT * FROM drive_files_cache \n      WHERE modified_time > ? AND is_processed = FALSE\n      ORDER BY modified_time DESC\n    `, [\n            sinceDate\n        ]);\n    },\n    // Oznacz plik jako przetworzony\n    markDriveFileAsProcessed: async (fileId, isProcessed = true)=>{\n        return await dbRun(`\n      UPDATE drive_files_cache \n      SET is_processed = ?, last_checked = CURRENT_TIMESTAMP\n      WHERE file_id = ?\n    `, [\n            isProcessed,\n            fileId\n        ]);\n    },\n    // Pobierz statystyki synchronizacji\n    getSyncStats: async (limit = 10)=>{\n        return await dbAll(`\n      SELECT \n        sync_type,\n        target_month,\n        started_at,\n        completed_at,\n        status,\n        processed_count,\n        imported_count,\n        skipped_count,\n        error_message\n      FROM sync_log \n      ORDER BY started_at DESC \n      LIMIT ?\n    `, [\n            limit\n        ]);\n    },\n    // Wyczyść cache starszych plików (opcjonalne, do housekeeping)\n    cleanOldDriveCache: async (olderThanDays = 30)=>{\n        return await dbRun(`\n      DELETE FROM drive_files_cache \n      WHERE last_checked < datetime('now', '-${olderThanDays} days')\n    `);\n    }\n};\n// Funkcje pomocnicze\nconst helpers = {\n    // Importuj artykuł z parsera JSON\n    importArticleFromParser: async (articleData)=>{\n        try {\n            // Rozpocznij transakcję\n            await dbRun(\"BEGIN TRANSACTION\");\n            // Wstaw artykuł\n            await articleQueries.insertArticle(articleData.articleId, articleData.title, articleData.titleHotnews, articleData.titleSocial, articleData.titleSeo, articleData.lead, articleData.description, articleData.author, JSON.stringify(articleData.sources), JSON.stringify(articleData.categories), JSON.stringify(articleData.tags), \"draft\");\n            // Oznacz pola wygenerowane przez AI\n            const aiFields = [\n                \"title_hotnews\",\n                \"title_social\",\n                \"title_seo\",\n                \"categories\",\n                \"tags\"\n            ];\n            for (const field of aiFields){\n                await articleQueries.insertAIField(articleData.articleId, field, true, 0.9 // wysoka pewność AI\n                );\n            }\n            // Pola z dokumentu (nie AI)\n            const manualFields = [\n                \"title\",\n                \"lead\",\n                \"description\"\n            ];\n            for (const field of manualFields){\n                await articleQueries.insertAIField(articleData.articleId, field, false, 1.0);\n            }\n            // Zatwierdź transakcję\n            await dbRun(\"COMMIT\");\n            return articleData.articleId;\n        } catch (error) {\n            // Wycofaj transakcję w przypadku błędu\n            await dbRun(\"ROLLBACK\");\n            throw error;\n        }\n    },\n    // Aktualizuj pole artykułu i zaznacz jako edytowane przez użytkownika\n    updateArticleField: async (articleId, fieldName, oldValue, newValue, editedBy = \"user\")=>{\n        try {\n            await dbRun(\"BEGIN TRANSACTION\");\n            // Zapisz historię edycji\n            await articleQueries.insertEditHistory(articleId, fieldName, oldValue, newValue, editedBy);\n            // Oznacz pole jako nieedytowane przez AI\n            await articleQueries.updateAIFieldStatus(articleId, fieldName);\n            await dbRun(\"COMMIT\");\n        } catch (error) {\n            await dbRun(\"ROLLBACK\");\n            throw error;\n        }\n    },\n    // Pobierz statystyki\n    getStats: async ()=>{\n        const totalArticles = await dbGet(\"SELECT COUNT(*) as count FROM articles\");\n        const draftArticles = await dbGet('SELECT COUNT(*) as count FROM articles WHERE status = \"draft\"');\n        const publishedArticles = await dbGet('SELECT COUNT(*) as count FROM articles WHERE status = \"published\"');\n        const aiFieldsCount = await dbGet(\"SELECT COUNT(*) as count FROM ai_generated_fields WHERE is_ai_generated = 1\");\n        return {\n            total: totalArticles.count,\n            draft: draftArticles.count,\n            published: publishedArticles.count,\n            aiFields: aiFieldsCount.count\n        };\n    }\n};\n// Eksportuj API\nmodule.exports = {\n    db,\n    initializeDatabase,\n    queries: articleQueries,\n    helpers\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/database.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/semver","vendor-chunks/bcryptjs","vendor-chunks/jsonwebtoken","vendor-chunks/lodash.includes","vendor-chunks/lodash.once","vendor-chunks/lodash.isinteger","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/lodash.isplainobject","vendor-chunks/ms","vendor-chunks/lodash.isstring","vendor-chunks/lodash.isnumber","vendor-chunks/lodash.isboolean","vendor-chunks/safe-buffer","vendor-chunks/buffer-equal-constant-time"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2Flogin%2Froute&page=%2Fapi%2Fauth%2Flogin%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2Flogin%2Froute.js&appDir=%2FUsers%2Fpawel%2FCode%2Fdocxtojson%2Ffrontend%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fpawel%2FCode%2Fdocxtojson%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();